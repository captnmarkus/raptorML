% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runner.R
\name{run_pipeline}
\alias{run_pipeline}
\title{Run a raptor_pipeline}
\usage{
run_pipeline(
  pipeline,
  parameters = list(),
  catalog_path = "conf/base/catalog.yaml",
  credentials_path = "conf/credentials/credentials.yaml",
  initial_catalog = NULL,
  from_nodes = NULL,
  to_nodes = NULL,
  node_names = NULL,
  tags = NULL
)
}
\arguments{
\item{pipeline}{A \code{raptor_pipeline} object.}

\item{parameters}{A list of parameters, typically loaded by \code{load_parameters()}.
Defaults to an empty list if not provided.}

\item{catalog_path}{The path to the main catalog YAML file. Defaults to
"conf/base/catalog.yaml".}

\item{credentials_path}{The path to the credentials YAML file. Defaults to
"conf/credentials/credentials.yaml".}

\item{initial_catalog}{An optional named list representing an already loaded catalog.
If provided, \code{catalog_path} is ignored for initial loading, but still passed to
\code{catalog_load} if a node explicitly needs it.}

\item{from_nodes}{An optional character vector of node names. If provided,
the pipeline execution will start from the first node listed in this vector.
Subsequent nodes will be executed in their original order. Ignored if \code{node_names} is provided.}

\item{to_nodes}{An optional character vector of node names. If provided,
the pipeline execution will stop after the last node listed in this vector has run.
Ignored if \code{node_names} is provided.}

\item{node_names}{An optional character vector of specific node names to run.
Only these nodes (and their dependencies, if dependency resolution is implemented)
will be run. For now, assume only the listed nodes are run in their pipeline order.
If \code{from_nodes} or \code{to_nodes} are also provided, \code{node_names} takes precedence for selecting the initial set, then \code{from/to} might further constrain. (For simplicity in this iteration, if \code{node_names} is provided, \code{from_nodes} and \code{to_nodes} could be ignored or issue a warning).}

\item{tags}{An optional character vector of tags. Only nodes that have AT LEAST ONE
of these tags will be run.}
}
\value{
A list containing the outputs of the executed nodes,
or an environment containing all intermediate and terminal outputs.
}
\description{
Executes the nodes in a raptor_pipeline object in sequence.
It handles loading inputs for each node using the catalog, passing outputs
from one node to the next in memory, and making parameters available to nodes.
It also supports filtering the nodes to be executed.
}
\examples{
\dontrun{
# Assuming pipe is a raptor_pipeline object and params are loaded
# results <- run_pipeline(pipe, params)
# results_tagged <- run_pipeline(pipe, params, tags = c("data_prep"))
# results_subset <- run_pipeline(pipe, params, node_names = c("node_A", "node_C"))
# results_range <- run_pipeline(pipe, params, from_nodes = "node_B", to_nodes = "node_D")
}
}
