% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nodes.R
\name{create_node}
\alias{create_node}
\title{Create a raptor_node object}
\usage{
create_node(func, inputs, outputs, name = NULL, tags = NULL, parameters = NULL)
}
\arguments{
\item{func}{The R function to be executed by this node.}

\item{inputs}{A character vector or a named list of character vectors specifying
the names of input datasets required by the function. These names should
correspond to entries in the data catalog or outputs of other nodes.}

\item{outputs}{A character vector or a named list of character vectors specifying
the names of output datasets produced by the function.}

\item{name}{An optional character string providing a descriptive name for the node.
If NULL, a name might be derived from the function name.}

\item{tags}{An optional character vector of tags for categorizing or filtering the node.}

\item{parameters}{An optional named list or character vector specifying parameters
that the node's function might require. These could be actual values or references
to parameter names in a global parameter configuration.}
}
\value{
An S3 object of class \code{raptor_node} containing the function, its
input/output definitions, and any provided metadata.
}
\description{
This function creates a structured object representing a node in a raptorML pipeline.
A node consists of a function to be executed, along with declarations of its
inputs, outputs, and optional metadata such as name, tags, and parameters.
}
\examples{
\dontrun{
# Define a simple function
my_processing_func <- function(raw_data, param1) {
  # process data
  processed_data <- raw_data * param1
  return(processed_data)
}

# Create a node
data_processing_node <- create_node(
  func = my_processing_func,
  inputs = "raw_data_catalog_key",
  outputs = "processed_data_catalog_key",
  name = "ProcessRawData",
  tags = c("data_processing", "stage1"),
  parameters = list(param1 = "my_parameter_key")
)
}
}
